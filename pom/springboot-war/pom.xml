<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- !!! 프로젝트에 맞춰 버전을 설정할 것 !!! -->
		<version>2.1.8.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<!-- !!! 프로젝트에 맞춰 변경할 것 !!! -->
	<groupId>groupId</groupId>
	<!-- !!! 프로젝트에 맞춰 변경할 것 !!! -->
	<artifactId>artifactId</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- !!! 프로젝트에 맞춰 변경할 것 !!! -->
	<name>개발 프로젝트</name>

	<properties>
		<!-- build.profile 은 mvn cli parameter로 전달받는다. -->
		<!-- mvn clean package -Dbuild.profile={value} -->
		<build.profile></build.profile>

		<encoding>UTF-8</encoding>

		<!-- !!! 프로젝트에 맞춰 변경할 것 !!! -->
		<build.finalName>{finalName}</build.finalName>
		<!-- !!! 프로젝트에 맞춰 변경할 것 !!! -->
		<manifest.mainClass>{FQCN: Full Qualified Class Name}</manifest.mainClass>
		<deploy.directory>deploy</deploy.directory>

		<java.version>1.8</java.version>

		<!-- !!! 프로젝트에 맞춰 변경할 것 !!! -->
		<!-- begin - dependencies / !!! 프로젝트에 맞춰 변경할 것 !!! -->
		<log4j.version>2.11.1</log4j.version>
		<log4j-slf4j.version>2.11.1</log4j-slf4j.version>

		<open-commons-core.version>1.6.15</open-commons-core.version>
		<open-commons-spring-web.version>0.2.2-RELEASE</open-commons-spring-web.version>
		<open-commons-spring-jdbc.version>0.0.5</open-commons-spring-jdbc.version>

		<oracje-jdbc.verson>12.2.0.1</oracje-jdbc.verson>
		<!-- end - dependencies / !!! 프로젝트에 맞춰 변경할 것 !!! -->
	</properties>

	<repositories>
		<repository>
			<id>YMTECH Maven Repository</id>
			<name>ymtech-maven-repo</name>
			<url>http://nexus3.ymtech.co.kr/repository/maven-public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>

		<!-- ************** -->
		<!-- begin: spring boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- end: spring boot -->
		<!-- ************** -->

		<!-- ************** -->
		<!-- begin: logging / log4j2 -->
		<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version><!-- $NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version><!-- $NO-MVN-MAN-VER$ -->
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j-slf4j.version}</version><!-- $NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<!-- for log4j-2.x: making all asynchronous loggers -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.3.6</version>
		</dependency>
		<!-- end: logging -->
		<!-- ************** -->

		<!-- ************** -->
		<!-- begin: jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
		<!-- end: jackson -->
		<!-- ************** -->

		<!-- ************** -->
		<!-- begin: open.commons -->
		<dependency>
			<groupId>open.commons</groupId>
			<artifactId>open-commons-core</artifactId>
			<version>${open-commons-core.version}</version>
		</dependency>
		<dependency>
			<groupId>open.commons</groupId>
			<artifactId>open-commons-spring-web</artifactId>
			<version>${open-commons-spring-web.version}</version>
		</dependency>
		<dependency>
			<groupId>open.commons</groupId>
			<artifactId>open-commons-spring-jdbc</artifactId>
			<version>${open-commons-spring-jdbc.version}</version>
		</dependency>
		<!-- end: open.commons -->
		<!-- ************** -->

		<!-- ************** -->
		<!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.9.11</version>
		</dependency>
		<!-- ************** -->

	</dependencies>

	<build>
		<finalName>${build.finalName}</finalName>
		<defaultGoal>install</defaultGoal>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>
		<plugins>

			<!-- begin: make 'clean external directories' -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>deploy/${build.profile}</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!-- end: make 'clean external directories' -->

			<!-- begin: compile & attach sources -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- end: compile & attach sources -->

			<!-- begin: make executable war -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<mainClass>${manifest.mainClass}</mainClass>
					<outputDirectory>${project.build.directory}/${build.finalName}</outputDirectory>
				</configuration>
			</plugin>
			<!-- end: make executable war -->

			<!-- begin: make 'profile signature' -->
			<plugin>
				<groupId>com.alexecollins.maven.plugin</groupId>
				<artifactId>script-maven-plugin</artifactId>
				<version>1.0.0</version>

				<executions>
					<execution>
						<id>Signature '${build.profile}'</id>
						<phase>package</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<language>javascript</language>
							<script>
								importPackage(java.lang);
								importPackage(org.apache.commons.io);
								importPackage(java.io);
								
								var dir = new File(project.getBuild().getDirectory(), "${build.finalName}");
								var profile = new File(dir, ".profile");
								FileUtils.write(profile, "${build.profile}", "UTF-8");
							</script>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.mozilla</groupId>
						<artifactId>rhino</artifactId>
						<version>1.7R5</version>
					</dependency>
					<!-- additional import for doing file I/O -->
					<dependency>
						<groupId>commons-io</groupId>
						<artifactId>commons-io</artifactId>
						<version>2.4</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- end: make 'profile signature' -->

			<!-- begin: make 'deploy' -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<!-- begin: ${build.profile} -->
					<execution>
						<id>Package '${build.profile}'</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${build.finalName}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>assembly/assembly-package-all.xml</descriptor>
							</descriptors>
							<outputDirectory>${project.basedir}/${deploy.directory}/${build.profile}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>Install '${build.profile}'</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<formats>
								<format>dir</format>
							</formats>
							<finalName>${build.profile}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>assembly/assembly-copy-workdir.xml</descriptor>
							</descriptors>
							<outputDirectory>${project.basedir}/${deploy.directory}</outputDirectory>
						</configuration>
					</execution>
					<!-- end: ${build.profile} -->
				</executions>
			</plugin>
			<!-- end: make 'deploy' -->

			<!-- begin: javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
					<additionalOptions>
						<additionalOption>-Xdoclint:none</additionalOption>
					</additionalOptions>
					<charset>${encoding}</charset>
					<docencoding>${encoding}</docencoding>
					<encoding>${encoding}</encoding>
				</configuration>
			</plugin>
			<!-- end: javadoc -->
		</plugins>
	</build>

	<description>개발 프로젝트 설명</description>

</project>